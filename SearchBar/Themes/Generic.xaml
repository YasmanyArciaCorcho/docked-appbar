<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:SearchBar.UI.Controls.Base">
    <Style TargetType="{x:Type controls:CustomButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="controls:CustomButton.OverBackground" Value="#20FFFFFF"/>
        <Setter Property="controls:CustomButton.PressedBackground" Value="#10FFFFFF"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CustomButton}">
                    <Grid UseLayoutRounding="true">
                        <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true"
                    UseLayoutRounding="true"
                    CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Focusable="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" UseLayoutRounding="true"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="true">
                            <Setter TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                      Property="Border.BorderBrush"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="border"
                      Value="{Binding OverBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="border"
                      Value="{Binding OverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.Background"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                            <Setter TargetName="border"
                      Value="{Binding PressedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.BorderBrush"/>
                            <Setter TargetName="border"
                      Value="{Binding PressedBackground, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="Border.Background"/>
                            <Setter TargetName="contentPresenter" Property="UIElement.RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="border" Property="Border.Background" Value="#7FFFFFFF"/>
                            <Setter TargetName="border" Property="Border.BorderBrush" Value="#BFFFFFFF"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
